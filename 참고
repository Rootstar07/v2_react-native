 //버튼 생성기 ver.map
  //const names = ["kendrick", "christopher", "theo", "dave"];
  //const buttonList = names.map((name2) => (
  //<Button title={name2} key={names.id} onPress={onSetNode}></Button>
  //)); //리스트를 받아 버튼 생성

  //const buttonList = TextNodes[index].options.map((
  //name //name이 TextNodes[0].options가 되는 기적!
  //) => (
  //<Button
  //title={name.text} //배열 안의 오브젝트라도 손쉽게 다룰수있게 되었다.
  //key 지정
  //onPress={onSetNode}
  //></Button>
  //));

  // const buttonindexList = TextNodes[index].buttonindex.map((buttonindex) => (
  // <Text>{buttonindex}</Text>
  //));


//모달
  <View style={styles.centeredView}>
              <Modal
                animationType="slide"
                backdropColor="snow"
                backdropOpacity={1}
                transparent={true}
                visible={modalVisible}
              >
                <View
                  style={{
                    width: "100%",
                    height: "100%",
                    backgroundColor: "black",
                    position: "absolute",
                    justifyContent: "center",
                    opacity: 0.77,
                    borderRadius: 20,
                  }}
                ></View>
                <View style={styles.centeredView}>
                  <View style={styles.modalView}>
                    <Text style={styles.modalText}>{getRandomInt(1, 7)}</Text>

                    <TouchableHighlight
                      style={{
                        ...styles.openButton,
                        backgroundColor: "#2196F3",
                      }}
                      onPress={() => {
                        closeModal();
                      }}
                    >
                      <Text style={styles.textStyle}>계속</Text>
                    </TouchableHighlight>
                  </View>
                </View>
              </Modal>
            </View>



              const openModal = (a, b, c, d) => {
    //모달창 열때
    setModalVisible(true); //모달 true
    NeXtNode(a, b, c, d);

    //모달창을 닫을때 화면을 전환하기 위해 미리 인수를 전달함
  };

  const closeModal = () => {
    //모달 닫는 버튼 누를때
    setModalVisible(!modalVisible);
  };